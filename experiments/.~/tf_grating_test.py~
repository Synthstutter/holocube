# sprite test

import holocube.hc5 as hc5
from numpy import *

# count exps
expi = 1

numframes = 200

# a grating stimulus
sp = hc5.stim.grating_class(hc5.window, fast=0)
tf = zeros(numframes)
tf[:50] = 0
tf[50:100] = 1
tf[100:150] = 2
tf[150:] = 1

# for sf in linspace(2/pi, 18/pi, 4, endpoint=True): #1/(pi/2)=1cycle on a site; pi/18=10deg (two ommatidia)
#     sp.add_grating(sf=sf, o=0, tf=1, sd=.35, maxframes=numframes)
for sf in linspace(2/pi, 18/pi, 4, endpoint=True): #1/(pi/2)=1cycle on a site; pi/18=10deg (two ommatidia)
    sp.add_plaid(sf1=sf, o1=0, tf1=1,
                 sf2=5/pi, o2=pi/2, tf2=2, sd=.35, maxframes=numframes)



for i in arange(4):
    expflashes = array(hc5.schedulers.spikelist(expi, numframes)*255, dtype='int')
    
    hc5.scheduler.add_test(hc5.window.set_perspective, False,                   0,
                           sp.choose_grating,          i,                       0,
                           sp.on,                      1,                       0,
                           
                           hc5.window.ref_color_4,     expflashes,              1,
                           sp.animate,                 arange(numframes),       1,
                           
                           sp.on,                      0,                      -1,
                           hc5.window.set_perspective, True,                   -1)

    expi += 1

# tracking bar
bar = hc5.stim.cbarr_class(hc5.window)
tri = arcsin(sin(linspace(0,4*pi,numframes)))*40
tri_dir = array(sign(ediff1d(tri,None, 0)), dtype='int')
lights = mod(cumsum(tri_dir),3)
expnumlights = array(hc5.schedulers.spikelist(expi, numframes)*255, dtype='int')

hc5.scheduler.add_test(bar.on,                     1,                        0,
                       hc5.window.ref_light,      -1,                        0,
                       
                       bar.set_ry,                 tri,                      1,
                       hc5.window.ref_light,       lights,                   1,
                       hc5.window.ref_color_4,     expnumlights,             1,
                       
                       hc5.window.ref_light,      -1,                       -1,
                       bar.on, 0,                                           -1)    


hc5.scheduler.save_exp()
